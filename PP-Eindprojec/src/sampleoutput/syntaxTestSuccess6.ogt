import Sprockell.System
prog :: [Instruction]
prog = [Const 0 RegA, 
	Branch RegA (Abs 4), 
	Const 0 RegA, 
	Jump (Abs 5), 
	Const 9 RegA, 
	Const 48 RegB, 
	Compute Add RegA RegB RegA, 
	Write RegA (Addr 16777216), 
	Const 10 RegA, 
	Write RegA (Addr 16777216), 
	Const 1 RegA, 
	Branch RegA (Abs 14), 
	Const 9 RegA, 
	Jump (Abs 15), 
	Const 0 RegA, 
	Const 48 RegB, 
	Compute Add RegA RegB RegA, 
	Write RegA (Addr 16777216), 
	Const 10 RegA, 
	Write RegA (Addr 16777216), 
	Const 3 RegA, 
	Push RegA, 
	Const 3 RegA, 
	Pop RegB, 
	Compute Sub RegB RegA RegA, 
	Push RegA, 
	Const 0 RegA, 
	Pop RegB, 
	Compute Equal RegB RegA RegA, 
	Store RegA (Addr 0), 
	Const 3 RegA, 
	Push RegA, 
	Const 4 RegA, 
	Pop RegB, 
	Compute Mul RegB RegA RegA, 
	Push RegA, 
	Const 12 RegA, 
	Pop RegB, 
	Compute Gt RegB RegA RegA, 
	Store RegA (Addr 1), 
	Const 1 RegA, 
	Store RegA (Addr 2), 
	Load (Addr 0) RegA, 
	Branch RegA (Abs 45), 
	Jump (Abs 47), 
	Const 0 RegA, 
	Store RegA (Addr 2), 
	Load (Addr 2) RegA, 
	Const 48 RegB, 
	Compute Add RegA RegB RegA, 
	Write RegA (Addr 16777216), 
	Const 10 RegA, 
	Write RegA (Addr 16777216), 
	Load (Addr 1) RegA, 
	Branch RegA (Abs 56), 
	Jump (Abs 59), 
	Const 1 RegA, 
	Store RegA (Addr 2), 
	Jump (Abs 61), 
	Const 2 RegA, 
	Store RegA (Addr 2), 
	Load (Addr 2) RegA, 
	Const 48 RegB, 
	Compute Add RegA RegB RegA, 
	Write RegA (Addr 16777216), 
	Const 10 RegA, 
	Write RegA (Addr 16777216), 
	EndProg]
main = run 1 prog
